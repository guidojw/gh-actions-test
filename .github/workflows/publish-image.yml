name: Publish Image

on:
  push:
    branches: [staging, master]
  workflow_call:
    inputs:
      ref:
        description: The branch, tag or SHA to publish.
        required: false
        type: string
    secrets:
      app_private_key:
        required: true
  workflow_dispatch:

env:
  REGISTRY_URL: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.output.outputs.sha }}
    if: contains('refs/heads/staging refs/heads/master', github.ref)
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ inputs.ref }}

      - name: Output current commit SHA
        id: output
        run: |
          echo '::set-output name=sha::'"$(git rev-parse HEAD)"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY_URL }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push staging image
        if: github.ref == 'refs/heads/staging'
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          cache-from: type=gha,scope=main
          cache-to: type=gha,scope=main
          tags: |
            ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:staging

      - name: Build and push production image
        if: github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          cache-from: type=gha,scope=main
          cache-to: type=gha,scope=main
          tags: |
            ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:latest

  update-checks:
    name: Update checks
    runs-on: ubuntu-latest
    needs: publish
    if: always() && (github.event_name == 'workflow_dispatch' || github.event_name == 'workflow_call')
    steps:
      - name: Generate app token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: 152323
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Update Publish check
        uses: LouisBrunner/checks-action@v1.2.0
        with:
          sha: ${{ needs.publish.outputs.sha }}
          token: ${{ steps.generate_token.outputs.token }}
          name: Publish
          conclusion: ${{ needs.publish.result }}
          details_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
