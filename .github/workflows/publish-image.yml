name: Publish Image

on:
  push:
    branches: [staging, master]
  workflow_call:
    secrets:
      app_private_key:
        required: true
  workflow_dispatch:

env:
  REGISTRY_URL: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  APP_ID: 152323

jobs:
  metadata:
    name: Metadata
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get_metadata.outputs.tag }}
    steps:
      - name: Get metadata
        id: get_metadata
        env:
          REF: ${{ github.ref }}
        run: |
          BRANCH_NAME=${REF#refs/heads/}
          if [ $BRANCH_NAME = 'master' ]; then
            echo '::set-output name=tag::latest'
          else
            echo '::set-output name=tag::'$BRANCH_NAME
          fi

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: metadata
    outputs:
      sha: ${{ steps.get_sha.outputs.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      # When this workflow is called after a merge (in Continuous Delivery),
      # github.sha does not point to the latest commit, so we have to get it
      # manually.
      - name: Get latest commit SHA
        id: get_sha
        run: |
          echo '::set-output name=sha::'$(git rev-parse HEAD)

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY_URL }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          cache-from: type=gha,scope=main
          cache-to: type=gha,scope=main
          tags: |
            ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:${{ needs.metadata.outputs.tag }}

  update-check-runs:
    name: Update Check Runs
    runs-on: ubuntu-latest
    needs: publish
    if: always() && (github.event_name == 'workflow_dispatch' || github.event_name == 'workflow_call')
    steps:
      - name: Update Publish Image Check Run
        uses: guidojw/actions/update-check-run@main
        with:
          app_id: ${{ env.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}
          sha: ${{ needs.publish.outputs.sha }}
          name: Publish Image
          conclusion: ${{ needs.publish.result }}
          details_url:  ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
